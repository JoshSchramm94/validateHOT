% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MarkSim.R
\name{marksim}
\alias{marksim}
\title{Function to run market simulations for validation task / market scenario}
\usage{
marksim(data, group, opts, method = c("sop", "fc"))
}
\arguments{
\item{data}{A data frame with all relevant variables.}

\item{group}{Optional column name(s) to specify grouping variable(s)
to get `marksim()` by group(s).}

\item{opts}{Column names of the alternatives included in the
validation/holdout task or market scenario.}

\item{method}{Name of the market simulation method that should be conducted.
Set either to `method = "sop"` to run share of preference
as method or `method = "fc"` to run first choice rule. Default
is `"sop"`.}
}
\value{
a tibble
}
\description{
`marksim` runs market simulations with options in a validation/holdout
task or a market scenario.
}
\details{
`marksim()` provides the expected aggregated market shares of each
alternative specified as well as its standard error,
and the lower and upper confidence interval. Latter is calculated according
to the following formula \eqn{mean +/- 1.96 x \frac{sd}{\sqrt(n)}}
(Orme, 2020, p. 94). `method` can either be set to `method = "sop"`
to run share of preference rule or to `method = "fc"` to run
first choice rule to simulate market shares.

`data` has to be a data frame including the alternatives shown in
the validation/holdout task or market scenario. Scenario can be created
using the `createHOT()` function.

`group` optional grouping variable, if results should be displayed by
different groups. Has to be column name of variables in `data`.

`opts` is required to specify the different alternatives in the
simulation task. Input of `opts` has to be column names of variables
in `data`.

`method` can either be set to `method = "sop"` to run share of
preference as method or `method = "fc"` to run first choice rule.
Default set to `method = "sop"`.
}
\examples{

library(validateHOT)

HOT <- createHOT(
  data = MaxDiff,
  id = 1,
  none = 19,
  prod.levels = list(3, 10, 11, 15, 16, 17, 18),
  method = "MaxDiff",
  choice = 20,
  varskeep = 21
)

# marksim share of preference - without group argument defined
marksim(
  data = HOT,
  opts = c(Option_1:None),
  method = "sop"
)

# marksim first choice - without group argument defined
marksim(
  data = HOT,
  opts = c(Option_1:None),
  method = "fc"
)

\dontrun{
# marksim share of preference - with group argument defined
marksim(
  data = HOT,
  opts = c(Option_1:None),
  group = Group
)

# marksim first choice - with group argument defined
marksim(
  data = HOT,
  opts = c(Option_1:None),
  group = Group
)
}

}
\references{
{

Orme, B. K. (2020). \emph{Getting Started with Conjoint Analysis:
Strategies for Product Design and Pricing Research}. 4th edition.
Manhattan Beach, CA: Research Publishers LLC.

}
}
